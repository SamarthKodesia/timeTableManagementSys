/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Logins;

import java.awt.HeadlessException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author blotcanvas
 */
public class teacher_timetable extends javax.swing.JFrame {
String user;
    /**
     * Creates new form teacher_timetable
     */
    public teacher_timetable() {
        initComponents();
        addData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Teacher's Timetable");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 6, -1, -1));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Weekday", "9:00-9:50", "9:50-10:40", "10:55-11:45", "11:45-12:35", "1:30-2:20", "2:20-3:10", "3:25-4:15", "4:15-5:05"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jTable1.setRowHeight(60);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(true);
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 685, 260));

        jButton1.setText("Main Menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(182, 391, 100, -1));

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(415, 391, 99, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/blotcanvas/Downloads/simple-animated-geometric-background-with-squares-4k-ultra-high-definition-video-loop_hzhlwak8x_thumbnail-full01.png")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mainMenu obj=new mainMenu();
        obj.setVisible(true);
        setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teacher_timetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teacher_timetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teacher_timetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teacher_timetable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teacher_timetable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
private void addData() {
        DefaultTableModel model=(DefaultTableModel) jTable1.getModel();
        try{
                String name = null;
                Login obj=new Login();
                user=obj.sendUser();
                int tu01,tu02,we01,we02,th01,th02,fr01,fr02,sa01,sa02;
                String tu1=null,tu2=null,tu3=null,tu4=null,tu5=null,tu6=null,tu7=null,tu8=null,we1=null,we2=null,we3=null,we4=null,we5=null,we6=null,we7=null,we8=null,sa1=null,sa2=null,sa3=null,sa4=null;
                String th1=null,th2=null,th3=null,th4=null,th5=null,th6=null,th7=null,th8=null,fr1=null,fr2=null,fr3=null,fr4=null,fr5=null,fr6=null,fr7=null,fr8=null,sa5=null,sa6=null,sa7=null,sa8=null;
                Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
                java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
                java.sql.Statement stmt=con.createStatement();
                String DBQ1="Select * from ADMIN_MAIN.credentials where USERNAME='"+user+"' ";
                ResultSet rs1=stmt.executeQuery(DBQ1);
                while(rs1.next()){
                    name = rs1.getString("NAME");
                    System.out.println(name);
                }
                String DBQ="Select * from ADMIN_MAIN.INFO1 where TEACHER='"+name+"' ";
                ResultSet rs=stmt.executeQuery(DBQ);
                while(rs.next()){
                    tu01 = rs.getInt("TU_SLOT1_TIME");
                    tu02=rs.getInt("TU_SLOT2_TIME");
                    we01 = rs.getInt("WE_SLOT1_TIME");
                    we02=rs.getInt("WE_SLOT2_TIME");
                    th01 = rs.getInt("TH_SLOT1_TIME");
                    th02=rs.getInt("TH_SLOT2_TIME");
                    fr01 = rs.getInt("FR_SLOT1_TIME");
                    fr02=rs.getInt("FR_SLOT2_TIME");
                    sa01 = rs.getInt("SA_SLOT1_TIME");
                    sa02=rs.getInt("SA_SLOT2_TIME");
                    switch (tu01) {
                        case 1:
                            tu1=rs.getString("TU_ROOM");
                            break;
                        case 2:
                            tu2=rs.getString("TU_ROOM");
                            break;
                        case 3:
                            tu3=rs.getString("TU_ROOM");
                            break;
                        case 4:
                            tu4=rs.getString("TU_ROOM");
                            break;
                        case 5:
                            tu5=rs.getString("TU_ROOM");
                            break;
                        case 6:
                            tu6=rs.getString("TU_ROOM");
                            break;
                        case 7:
                            tu7=rs.getString("TU_ROOM");
                            break;
                        case 8:
                            tu8=rs.getString("TU_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (tu02) {
                        case 1:
                            tu1=rs.getString("TU2_ROOM");
                            break;
                        case 2:
                            tu2=rs.getString("TU2_ROOM");
                            break;
                        case 3:
                            tu3=rs.getString("TU2_ROOM");
                            break;
                        case 4:
                            tu4=rs.getString("TU2_ROOM");
                            break;
                        case 5:
                            tu5=rs.getString("TU2_ROOM");
                            break;
                        case 6:
                            tu6=rs.getString("TU2_ROOM");
                            break;
                        case 7:
                            tu7=rs.getString("TU2_ROOM");
                            break;
                        case 8:
                            tu8=rs.getString("TU2_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (we01) {
                        case 1:
                            we1=rs.getString("WE_ROOM");
                            break;
                        case 2:
                            we2=rs.getString("WE_ROOM");
                            break;
                        case 3:
                            we3=rs.getString("WE_ROOM");
                            break;
                        case 4:
                            we4=rs.getString("WE_ROOM");
                            break;
                        case 5:
                            we5=rs.getString("WE_ROOM");
                            break;
                        case 6:
                            we6=rs.getString("WE_ROOM");
                            break;
                        case 7:
                            we7=rs.getString("WE_ROOM");
                            break;
                        case 8:
                            we8=rs.getString("WE_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (we02) {
                        case 1:
                            we1=rs.getString("WE2_ROOM");
                            break;
                        case 2:
                            we2=rs.getString("WE2_ROOM");
                            break;
                        case 3:
                            we3=rs.getString("WE2_ROOM");
                            break;
                        case 4:
                            we4=rs.getString("WE2_ROOM");
                            break;
                        case 5:
                            we5=rs.getString("WE2_ROOM");
                            break;
                        case 6:
                            we6=rs.getString("WE2_ROOM");
                            break;
                        case 7:
                            we7=rs.getString("WE2_ROOM");
                            break;
                        case 8:
                            we8=rs.getString("WE2_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                     switch (th01) {
                        case 1:
                            th1=rs.getString("TH_ROOM");
                            break;
                        case 2:
                            th2=rs.getString("TH_ROOM");
                            break;
                        case 3:
                            th3=rs.getString("TH_ROOM");
                            break;
                        case 4:
                            th4=rs.getString("TH_ROOM");
                            break;
                        case 5:
                            th5=rs.getString("TH_ROOM");
                            break;
                        case 6:
                            th6=rs.getString("TH_ROOM");
                            break;
                        case 7:
                            th7=rs.getString("TH_ROOM");
                            break;
                        case 8:
                            th8=rs.getString("TH_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (th02) {
                        case 1:
                            th1=rs.getString("TH2_ROOM");
                            break;
                        case 2:
                            th2=rs.getString("TH2_ROOM");
                            break;
                        case 3:
                            th3=rs.getString("TH2_ROOM");
                            break;
                        case 4:
                            th4=rs.getString("TH2_ROOM");
                            break;
                        case 5:
                            th5=rs.getString("TH2_ROOM");
                            break;
                        case 6:
                            th6=rs.getString("TH2_ROOM");
                            break;
                        case 7:
                            th7=rs.getString("TH2_ROOM");
                            break;
                        case 8:
                            th8=rs.getString("TH2_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (fr01) {
                        case 1:
                            fr1=rs.getString("FR_ROOM");
                            break;
                        case 2:
                            fr2=rs.getString("FR_ROOM");
                            break;
                        case 3:
                            fr3=rs.getString("FR_ROOM");
                            break;
                        case 4:
                            fr4=rs.getString("FR_ROOM");
                            break;
                        case 5:
                            fr5=rs.getString("FR_ROOM");
                            break;
                        case 6:
                            fr6=rs.getString("FR_ROOM");
                            break;
                        case 7:
                            fr7=rs.getString("FR_ROOM");
                            break;
                        case 8:
                            fr8=rs.getString("FR_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (fr02) {
                        case 1:
                            fr1=rs.getString("FR2_ROOM");
                            break;
                        case 2:
                            fr2=rs.getString("FR2_ROOM");
                            break;
                        case 3:
                            fr3=rs.getString("FR2_ROOM");
                            break;
                        case 4:
                            fr4=rs.getString("FR2_ROOM");
                            break;
                        case 5:
                            fr5=rs.getString("FR2_ROOM");
                            break;
                        case 6:
                            fr6=rs.getString("FR2_ROOM");
                            break;
                        case 7:
                            fr7=rs.getString("FR2_ROOM");
                            break;
                        case 8:
                            fr8=rs.getString("FR2_ROOM");
                            break;
                        default:
                            break;
                    }
                    switch (sa01) {
                        case 1:
                            sa1=rs.getString("SA_ROOM");
                            break;
                        case 2:
                            sa2=rs.getString("SA_ROOM");
                            break;
                        case 3:
                            sa3=rs.getString("SA_ROOM");
                            break;
                        case 4:
                            sa4=rs.getString("SA_ROOM");
                            break;
                        case 5:
                            sa5=rs.getString("SA_ROOM");
                            break;
                        case 6:
                            sa6=rs.getString("SA_ROOM");
                            break;
                        case 7:
                            sa7=rs.getString("SA_ROOM");
                            break;
                        case 8:
                            sa8=rs.getString("SA_ROOM");
                            break;
                        default:
                            break;
                    }
                    
                    switch (sa02) {
                        case 1:
                            sa1=rs.getString("SA2_ROOM");
                            break;
                        case 2:
                            sa2=rs.getString("SA2_ROOM");
                            break;
                        case 3:
                            sa3=rs.getString("SA2_ROOM");
                            break;
                        case 4:
                            sa4=rs.getString("SA2_ROOM");
                            break;
                        case 5:
                            sa5=rs.getString("SA2_ROOM");
                            break;
                        case 6:
                            sa6=rs.getString("SA2_ROOM");
                            break;
                        case 7:
                            sa7=rs.getString("SA2_ROOM");
                            break;
                        case 8:
                            sa8=rs.getString("SA2_ROOM");
                            break;
                        default:
                            break;
                    }

                    
                    
                    model.addRow(new Object[]{"Tuesday",tu1,tu2,tu3,tu4,tu5,tu6,tu7,tu8});
                    model.addRow(new Object[]{"Wednesday",we1,we2,we3,we4,we5,we6,we7,we8});
                    model.addRow(new Object[]{"Thursday",th1,th2,th3,th4,th5,th6,th7,th8});
                    model.addRow(new Object[]{"Friday",fr1,fr2,fr3,fr4,fr5,fr6,fr7,fr8});
                    model.addRow(new Object[]{"Saturday",sa1,sa2,sa3,sa4,sa5,sa6,sa7,sa8});
                }
            }    
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
    }
}
