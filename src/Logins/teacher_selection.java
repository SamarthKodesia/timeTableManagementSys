/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Logins;

import java.awt.HeadlessException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author blotcanvas
 */
public class teacher_selection extends javax.swing.JFrame {
String day;
String slot;
String room;
int shift=1;
int checkVal;
    /**
     * Creates new form teacher_selection
     */
    String teacher="";
    public teacher_selection() {
        initComponents();
        String day_temp=(String) jComboBox_day.getSelectedItem();
        day=day_temp.toUpperCase();
        String temp=(String) jComboBox_shift.getSelectedItem();
        shift = Integer.valueOf(temp);
        fillClass();
        jLabel_time.setText("-");
        jComboBox_slot.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox_year = new javax.swing.JComboBox<>();
        jComboBox_class = new javax.swing.JComboBox<>();
        jComboBox_day = new javax.swing.JComboBox<>();
        jButton_submit = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox_slot = new javax.swing.JComboBox<>();
        jButton_mainMenu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox_shift = new javax.swing.JComboBox<>();
        jLabel_time = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("Teacher's Selection Menu");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        jLabel2.setText("Select Year");

        jLabel3.setText("Select Class Room");

        jLabel4.setText("Select Lesson");

        jComboBox_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_yearActionPerformed(evt);
            }
        });

        jComboBox_class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_classActionPerformed(evt);
            }
        });

        jComboBox_day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));
        jComboBox_day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_dayActionPerformed(evt);
            }
        });

        jButton_submit.setText("Submit");
        jButton_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_submitActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Day");

        jComboBox_slot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_slotActionPerformed(evt);
            }
        });

        jButton_mainMenu.setText("Main Menu");
        jButton_mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_mainMenuActionPerformed(evt);
            }
        });

        jLabel6.setText("Select Shift");

        jComboBox_shift.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        jComboBox_shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_shiftActionPerformed(evt);
            }
        });

        jLabel_time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_time.setText("-");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jButton_submit))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_time, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBox_year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox_day, 0, 137, Short.MAX_VALUE)
                                .addComponent(jComboBox_slot, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jComboBox_shift, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox_class, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButton_mainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addGap(82, 82, 82))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox_day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox_shift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_class, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox_slot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_time))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_submit)
                    .addComponent(jButton2)
                    .addComponent(jButton_mainMenu))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 90, 540, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("/Users/blotcanvas/Downloads/simple-animated-geometric-background-with-squares-4k-ultra-high-definition-video-loop_hzhlwak8x_thumbnail-full01.png")); // NOI18N
        jLabel9.setText("jLabel9");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_yearActionPerformed

    private void jButton_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_submitActionPerformed
        try{
            check();
            Login log= new Login();
            String user=log.sendUser();
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            String st="select * from ADMIN_MAIN.CREDENTIALS where USERNAME='"+user+"'";
            ResultSet rs1=stmt.executeQuery(st);
            if(rs1.next())
            {
                teacher=rs1.getString("NAME");
            }
            room=(String) jComboBox_class.getSelectedItem();
            slot=jComboBox_slot.getSelectedItem().toString();
            int a=room.length();
            System.out.println(a);
            System.out.println(teacher);
            System.out.println(day);
            System.out.println(slot);
            System.out.println(room);
            PreparedStatement ps;
            warning war=new warning();
            String DBQ1="select * from ADMIN_MAIN.Room where day='"+day+"' AND lessons='"+slot+"'";
            ResultSet rs=stmt.executeQuery(DBQ1);
            if(rs.next()){
                ps=con.prepareStatement("update ADMIN_MAIN.ROOM set "+room+"='"+teacher+"'where day='"+day+"' AND lessons='"+slot+"'");
                int x=ps.executeUpdate();
            }
            
            String st1="select * from ADMIN_MAIN.INFO1 where TEACHER='"+teacher+"'";
            ResultSet rs2=stmt.executeQuery(st1);
            int lesson=Integer.valueOf(slot);
            if(rs2.next()){
            if("TUESDAY".equals(day) && 1==shift)
            {
                       String insert = "update ADMIN_MAIN.INFO1 set TU_SLOT1_TIME= "+lesson+" where TEACHER='"+teacher+"'";
                       stmt.executeUpdate(insert);
                       String insert2 = "update ADMIN_MAIN.INFO1 set TU_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                       stmt.executeUpdate(insert2);
            }
            else if("TUESDAY".equals(day) && 2==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set TU_SLOT2_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set TU2_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("WEDNESDAY".equals(day) && 1==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set WE_SLOT1_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set WE_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("WEDNESDAY".equals(day) && 2==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set WE_SLOT2_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set WE2_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("THURSDAY".equals(day) && 1==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set TH_SLOT1_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set TH_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("THURSDAY".equals(day) && 2==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set TH_SLOT2_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set TH2_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("FRIDAY".equals(day) && 1==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set FR_SLOT1_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set FR_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("FRIDAY".equals(day) && 2==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set FR_SLOT2_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set FR2_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("SATURDAY".equals(day) && 1==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set SA_SLOT1_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set SA_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            }
            else if("SATURDAY".equals(day) && 2==shift)
            {
                   ps=con.prepareStatement("update ADMIN_MAIN.INFO1 set SA_SLOT2_TIME="+lesson+" where TEACHER='"+teacher+"'");
                   int x=ps.executeUpdate();
                   String insert2 = "update ADMIN_MAIN.INFO1 set SA2_ROOM= '"+room+"' where TEACHER='"+teacher+"'";
                   stmt.executeUpdate(insert2);
            } 
            }
            JOptionPane.showMessageDialog(null,"Slot successfully booked !!","Success !!",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
        jComboBox_slot.removeAllItems();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_submitActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox_classActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_classActionPerformed
        jLabel_time.setText("-");    
        jComboBox_slot.removeAllItems();
        Object selectedItem = jComboBox_class.getSelectedItem();
    String selectedItemStr = null;
    String tempRoom="";
    if (selectedItem != null)
    {
        selectedItemStr = selectedItem.toString();
        tempRoom=selectedItemStr;
    }
    char ch=tempRoom.charAt(0);
    if(ch!='G')
    {
        room="R"+tempRoom;
    }
    else{
        room=tempRoom;
    }
        String temp=(String) jComboBox_shift.getSelectedItem();
        shift = Integer.valueOf(temp);
        // TODO add your handling code here:
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            System.out.println(day);
            String DBQ="Select * from ADMIN_MAIN.ROOM where day='"+day+"'";
            ResultSet rs=stmt.executeQuery(DBQ);
            int a = 0;
            while(rs.next()){
                    String classes = rs.getString(room);
                    if(classes==null || "".equals(classes))
                    {
                        String add=rs.getString("LESSONS");
                        a=Integer.parseInt(add);
                        jComboBox_slot.addItem(add);
                    }
            }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
    }//GEN-LAST:event_jComboBox_classActionPerformed

    private void jComboBox_dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_dayActionPerformed
            String day_temp=(String) jComboBox_day.getSelectedItem();
            day=day_temp.toUpperCase();
            jLabel_time.setText("-");
            jComboBox_slot.removeAllItems();
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_dayActionPerformed

    private void jComboBox_slotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_slotActionPerformed
        Object selectedItem = jComboBox_slot.getSelectedItem();
    String selectedItemStr = null;
    if (selectedItem != null)
    {
        selectedItemStr = selectedItem.toString();
        slot=selectedItemStr;
    }
    System.out.println(slot);
        fillTime();
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_slotActionPerformed

    private void jButton_mainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_mainMenuActionPerformed
        mainMenu obj=new mainMenu();
        obj.setVisible(true);
        setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton_mainMenuActionPerformed

    private void jComboBox_shiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_shiftActionPerformed
   try{
            jComboBox_slot.removeAllItems();
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            String DBQ="Select * from ADMIN_MAIN.INFO1 where TEACHER='"+teacher+"' ";
            ResultSet rs2=stmt.executeQuery(DBQ);
            if(rs2.next()){
                
               String classes = rs2.getString(room);
                if(classes==null || "".equals(classes))
                {
                    String add=rs2.getString("LESSONS");
                    jComboBox_slot.addItem(add);
                } 
            }
            check();
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_shiftActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(teacher_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(teacher_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(teacher_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(teacher_selection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new teacher_selection().setVisible(true);
            }
        });
    }
    
    public void fillTime(){
        int a=Integer.parseInt(slot);
                        switch(a){
                            case 1:
                                jLabel_time.setText("9:00-9:50");
                                break;

                            case 2:
                                jLabel_time.setText("9:50-10:40");
                                break;
                            case 3:
                                jLabel_time.setText("10:55-11:45");
                                break;
                            case 4:
                                jLabel_time.setText("11:45-12:35");
                                break;
                            case 5:
                                jLabel_time.setText("1:30-2:20");
                                break;
                            case 6:
                                jLabel_time.setText("2:20-3:10");
                                break;
                            case 7:
                                jLabel_time.setText("3:25-4:15");
                                break;
                            case 8:
                                jLabel_time.setText("4:15-5:05");
                                break;

                            default:
                                jLabel_time.setText("-");
                                break;
                      }
    }
    
    public void check(){
        try{
            Login log= new Login();
            String user=log.sendUser();
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            String st="select * from ADMIN_MAIN.CREDENTIALS where USERNAME='"+user+"'";
            ResultSet rs1=stmt.executeQuery(st);
            if(rs1.next())
            {
                teacher=rs1.getString("NAME");
            }
            room=(String) jComboBox_class.getSelectedItem();
            warning war=new warning();
            String st1="select * from ADMIN_MAIN.INFO1 where TEACHER='"+teacher+"'";
            ResultSet rs2=stmt.executeQuery(st1);
            PreparedStatement ps;
            String dash="";
            if(rs2.next()){
            if("TUESDAY".equals(day) && 1==shift)
            {
                       int check=rs2.getInt("TU_SLOT1_TIME");
                       if(check!=0)
                       {
                           war.setVisible(true);
                           checkVal=war.sendFlg();
                           if(checkVal==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set TU_SLOT1_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            else if("TUESDAY".equals(day) && 2==shift)
            {
                       String check=rs2.getString("TU_SLOT2_TIME");
                       if("".equals(check) || check==null)
                       {
                           war.setVisible(true);
                           int a=war.sendFlg();
                           if(a==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set TU_SLOT2_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            
            if("WEDNESDAY".equals(day) && 1==shift)
            {
                       int check=rs2.getInt("WE_SLOT1_TIME");
                       if(check!=0)
                       {
                           war.setVisible(true);
                           checkVal=war.sendFlg();
                           if(checkVal==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set WE_SLOT1_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            else if("WEDNESDAY".equals(day) && 2==shift)
            {
                       String check=rs2.getString("WE_SLOT2_TIME");
                       if("".equals(check) || check==null)
                       {
                           war.setVisible(true);
                           int a=war.sendFlg();
                           if(a==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set WE_SLOT2_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            
            if("THURSDAY".equals(day) && 1==shift)
            {
                       int check=rs2.getInt("TH_SLOT1_TIME");
                       if(check!=0)
                       {
                           war.setVisible(true);
                           checkVal=war.sendFlg();
                           if(checkVal==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set TH_SLOT1_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            else if("THURSDAY".equals(day) && 2==shift)
            {
                       String check=rs2.getString("TH_SLOT2_TIME");
                       if("".equals(check) || check==null)
                       {
                           war.setVisible(true);
                           int a=war.sendFlg();
                           if(a==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set TH_SLOT2_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            
            if("FRIDAY".equals(day) && 1==shift)
            {
                       int check=rs2.getInt("FR_SLOT1_TIME");
                       if(check!=0)
                       {
                           war.setVisible(true);
                           checkVal=war.sendFlg();
                           if(checkVal==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set FR_SLOT1_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            else if("FRIDAY".equals(day) && 2==shift)
            {
                       String check=rs2.getString("FR_SLOT2_TIME");
                       if("".equals(check) || check==null)
                       {
                           war.setVisible(true);
                           int a=war.sendFlg();
                           if(a==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set FR_SLOT2_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            
            if("SATURDAY".equals(day) && 1==shift)
            {
                       int check=rs2.getInt("SA_SLOT1_TIME");
                       if(check!=0)
                       {
                           war.setVisible(true);
                           checkVal=war.sendFlg();
                           if(checkVal==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set SA_SLOT1_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
            else if("SATURDAY".equals(day) && 2==shift)
            {
                       String check=rs2.getString("SA_SLOT2_TIME");
                       if("".equals(check) || check==null)
                       {
                           war.setVisible(true);
                           int a=war.sendFlg();
                           if(a==1)
                           {
                            String insert2 = "update ADMIN_MAIN.INFO1 set SA_SLOT2_TIME= '"+dash+"' where TEACHER='"+teacher+"'";
                            stmt.executeUpdate(insert2);   
                           }
                       }
            }
           }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
    }
    
    private void fillClass(){
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            String DBQ="Select * from ADMIN_MAIN.ROOM";
        ResultSet rs=stmt.executeQuery(DBQ);
        jComboBox_year.addItem("2017");
        jComboBox_year.addItem("2018");
        while(rs.next()){
            String classes = rs.getString("ROOM");
            if(classes!=null)
                jComboBox_class.addItem(classes);
        }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
    }
    
    private void fillSlots(){
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            java.sql.Connection con=DriverManager.getConnection("jdbc:derby://localhost:1527/Login_Credentials","admin_main","admin");
            java.sql.Statement stmt=con.createStatement();
            String DBQ="Select * from ADMIN_MAIN.ROOM ";
        ResultSet rs=stmt.executeQuery(DBQ);
        while(rs.next()){
            String classes = rs.getString("ROOM");
            jComboBox_class.addItem(classes);
        }
        }
        catch(HeadlessException | ClassNotFoundException | SQLException e){
           System.err.println(e);
        }
    }
    public String sendDay(){
        String weekday=day;
        return weekday;
    }
    public int sendShift(){
        int shi=shift;
        return shi;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_mainMenu;
    private javax.swing.JButton jButton_submit;
    private javax.swing.JComboBox<String> jComboBox_class;
    private javax.swing.JComboBox<String> jComboBox_day;
    private javax.swing.JComboBox<String> jComboBox_shift;
    private javax.swing.JComboBox<String> jComboBox_slot;
    private javax.swing.JComboBox<String> jComboBox_year;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_time;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
